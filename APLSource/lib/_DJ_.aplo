 _DJ_←{
     ⍝ Deutsch–Jozsa algorithm.
     ⍝ Takes a vector state in the 0 state (all qubits are in the 0 states).
     ⍝ Applies the algorithm with the passed oracle and returns the vector state without being measured.
     ⍝
     ⍝ ⍵: Vector state in the 0 state. This is to indicate with how many qubits the algorithm should be run.
     ⍝ ⍺⍺:

     ⍝ Define the functions that we are going to use
     q1←#.quapl.sng.q1
     H←#.quapl.gates.H
     CNOT←#.quapl.gates.CNOT
     reg←#.quapl.circuit.reg
     stage←#.quapl.circuit.stage
     thread_reg←#.quapl.circuit.thread_reg

     n_qubits←(2⍟1⌷⍴⍵)+1
     q←reg n_qubits

     ⍝ First qubit will be our ancilla qubit
     q[1;2]←⊂q1
     stg_ctrl←(((⍳n_qubits)-1)({H}¨⍳n_qubits))

     ⍝ Create the superposition for the oracle
     mid_state←stg_ctrl stage thread_reg q

     ⍝ pass to the oracle
     oracle_state←⍺⍺ mid_state
     stg_ctrl stage oracle_state
 }
